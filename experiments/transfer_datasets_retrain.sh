model_path=meta_bayes/experiments

# Wine Regression with Boston Hyperparameters
regression_boston_fc_vanilla_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
regression_boston_fc_gradient_gaussian_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_gradient_eta\":0.44474832178855184,\"noise_gradient_gamma\":0.9412837417757663,\"noise_probabilities\":[0.390094665918099],\"noise_types\":[\"gradient_gaussian\"]}
regression_boston_fc_input_additive_gaussian_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_input_additive_gaussian_sigma\":0.004430375245218269,\"noise_probabilities\":[0.7151893663724195],\"noise_types\":[\"input_additive_gaussian\"]}
regression_boston_fc_input_target_cmixup_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_input_target_cmixup_alpha\":0.3695041797337034,\"noise_input_target_cmixup_sigma\":3.4392938971566904,\"noise_probabilities\":[0.7423734777062635],\"noise_types\":[\"input_target_cmixup\"]}
regression_boston_fc_model_sp_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_model_shrink_and_perturb_mu\":0.9840633449144066,\"noise_model_shrink_and_perturb_sigma\":1.1624345747744106e-05,\"noise_model_shrink_and_perturb_epoch_frequency\":17,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
regression_boston_fc_activation_additive_gaussian_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_activation_additive_gaussian_sigma\":0.00011498870747119459,\"noise_probabilities\":[0.832619845547938],\"noise_types\":[\"activation_additive_gaussian\"]}
regression_boston_fc_activation_dropout_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_activation_dropout_p\":0.5488135039273248,\"noise_probabilities\":[0.7151893663724195],\"noise_types\":[\"activation_dropout\"]}
regression_boston_fc_weight_additive_gaussian_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_weight_additive_gaussian_sigma\":0.0036555305642264136,\"noise_probabilities\":[0.2822864073723416],\"noise_types\":[\"weight_additive_gaussian\"]}
regression_boston_fc_weight_dropconnect_hp={\"lr\":0.09865659655619714,\"l2\":0.0004036288027444272,\"noise_weight_dropconnect_p\":0.019212238282840355,\"noise_probabilities\":[0.35844550455271496],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-input_target_cmixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-input_target_cmixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-input_target_cmixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset regression_wine --architecture fc --label regression_wine-fc-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_boston_fc_weight_dropconnect_hp}

# Energy Regression with Concrete Hyperparameters
regression_concrete_fc_vanilla_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
regression_concrete_fc_gradient_gaussian_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_gradient_eta\":0.6080406212360511,\"noise_gradient_gamma\":0.907030433379284,\"noise_probabilities\":[0.0014036694621546966],\"noise_types\":[\"gradient_gaussian\"]}
regression_concrete_fc_input_additive_gaussian_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_input_additive_gaussian_sigma\":0.003910048801236203,\"noise_probabilities\":[0.4289375162774919],\"noise_types\":[\"input_additive_gaussian\"]}
regression_concrete_fc_input_target_cmixup_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_input_target_cmixup_alpha\":0.6037865995040763,\"noise_input_target_cmixup_sigma\":0.08426580807614432,\"noise_probabilities\":[0.7046902683704934],\"noise_types\":[\"input_target_cmixup\"]}
regression_concrete_fc_model_sp_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_model_shrink_and_perturb_mu\":0.9091877667524264,\"noise_model_shrink_and_perturb_sigma\":6.592588294542653e-05,\"noise_model_shrink_and_perturb_epoch_frequency\":20,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
regression_concrete_fc_activation_additive_gaussian_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_activation_additive_gaussian_sigma\":0.004430375245218269,\"noise_probabilities\":[0.7151893663724195],\"noise_types\":[\"activation_additive_gaussian\"]}
regression_concrete_fc_activation_dropout_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_activation_dropout_p\":0.01174870210073223,\"noise_probabilities\":[0.05296668109675976],\"noise_types\":[\"activation_dropout\"]}
regression_concrete_fc_weight_additive_gaussian_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_weight_additive_gaussian_sigma\":0.0022442685254037576,\"noise_probabilities\":[0.6394132195392865],\"noise_types\":[\"weight_additive_gaussian\"]}
regression_concrete_fc_weight_dropconnect_hp={\"lr\":0.020954485953363917,\"l2\":0.0015872102062766636,\"noise_weight_dropconnect_p\":0.020334471624930517,\"noise_probabilities\":[0.023510587815976064],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-input_target_cmixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-input_target_cmixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-input_target_cmixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset regression_energy --architecture fc --label regression_energy-fc-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_concrete_fc_weight_dropconnect_hp}

# Concrete Regression with Yacht Hyperparameters
regression_yacht_fc_vanilla_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
regression_yacht_fc_gradient_gaussian_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_gradient_eta\":0.11827442586893322,\"noise_gradient_gamma\":0.6399210213275238,\"noise_probabilities\":[0.1433532874090464],\"noise_types\":[\"gradient_gaussian\"]}
regression_yacht_fc_input_additive_gaussian_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_input_additive_gaussian_sigma\":0.002054762512591136,\"noise_probabilities\":[0.8917730007820798],\"noise_types\":[\"input_additive_gaussian\"]}
regression_yacht_fc_input_target_cmixup_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_input_target_cmixup_alpha\":0.5488135039273248,\"noise_input_target_cmixup_sigma\":1.9549524484259886,\"noise_probabilities\":[0.6027633760716439],\"noise_types\":[\"input_target_cmixup\"]}
regression_yacht_fc_model_sp_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_model_shrink_and_perturb_mu\":0.6961529293259653,\"noise_model_shrink_and_perturb_sigma\":9.880239175798184e-05,\"noise_model_shrink_and_perturb_epoch_frequency\":20,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
regression_yacht_fc_activation_additive_gaussian_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_activation_additive_gaussian_sigma\":0.002276164017865334,\"noise_probabilities\":[0.0887064624977618],\"noise_types\":[\"activation_additive_gaussian\"]}
regression_yacht_fc_activation_dropout_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_activation_dropout_p\":0.0008551619357729558,\"noise_probabilities\":[0.10711950133079484],\"noise_types\":[\"activation_dropout\"]}
regression_yacht_fc_weight_additive_gaussian_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_weight_additive_gaussian_sigma\":0.0018662266976517971,\"noise_probabilities\":[0.6458941130666561],\"noise_types\":[\"weight_additive_gaussian\"]}
regression_yacht_fc_weight_dropconnect_hp={\"lr\":0.07290097185098625,\"l2\":1.0761836425688191e-05,\"noise_weight_dropconnect_p\":0.05148512276505469,\"noise_probabilities\":[0.10962988421300414],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_target_cmixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_target_cmixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-input_target_cmixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_input_target_cmixup_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset regression_concrete --architecture fc --label regression_concrete-fc-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${regression_yacht_fc_weight_dropconnect_hp}

# CIFAR-10 with SVHN Hyperparameters
svhn_fc_vanilla_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
svhn_fc_gradient_gaussian_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_gradient_eta\":0.5505135006096207,\"noise_gradient_gamma\":0.9448752328800293,\"noise_probabilities\":[0.04246783558690373],\"noise_types\":[\"gradient_gaussian\"]}
svhn_fc_input_additive_gaussian_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_input_additive_gaussian_sigma\":0.006431172050131994,\"noise_probabilities\":[0.5448831829968969],\"noise_types\":[\"input_additive_gaussian\"]}
svhn_fc_input_augmix_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_input_augmix_alpha\":0.5488135039273248,\"noise_input_augmix_severity\":8,\"noise_input_augmix_width\":4,\"noise_input_augmix_chain_depth\":2,\"noise_probabilities\":[0.8917730007820798],\"noise_types\":[\"input_augmix\"]}
svhn_fc_input_ods_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_input_ods_temperature\":4.568297373052613,\"noise_input_ods_eta\":0.00562586993618947,\"noise_probabilities\":[0.4183952417470412],\"noise_types\":[\"input_ods\"]}
svhn_fc_input_random_crop_horizontal_flip_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_probabilities\":[0.5488135039273248],\"noise_types\":[\"input_random_crop_horizontal_flip\"]}
svhn_fc_input_target_mixup_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_input_target_mixup_alpha\":0.5488135039273248,\"noise_probabilities\":[0.7151893663724195],\"noise_types\":[\"input_target_mixup\"]}
svhn_fc_model_sp_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_model_shrink_and_perturb_mu\":0.740238871310729,\"noise_model_shrink_and_perturb_sigma\":4.962702204153306e-06,\"noise_model_shrink_and_perturb_epoch_frequency\":15,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
svhn_fc_target_smoothing_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_target_label_smoothing\":0.015231858697577642,\"noise_probabilities\":[0.5274631407403358],\"noise_types\":[\"target_label_smoothing\"]}
svhn_fc_activation_additive_gaussian_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_activation_additive_gaussian_sigma\":0.0018662266976517971,\"noise_probabilities\":[0.6458941130666561],\"noise_types\":[\"activation_additive_gaussian\"]}
svhn_fc_activation_dropout_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_activation_dropout_p\":0.16934830420532498,\"noise_probabilities\":[0.6647462886050552],\"noise_types\":[\"activation_dropout\"]}
svhn_fc_weight_additive_gaussian_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_weight_additive_gaussian_sigma\":0.00011508094377692601,\"noise_probabilities\":[0.023510587815976064],\"noise_types\":[\"weight_additive_gaussian\"]}
svhn_fc_weight_dropconnect_hp={\"lr\":0.014361027310005589,\"l2\":8.401956591508542e-05,\"noise_weight_dropconnect_p\":0.02021839744032572,\"noise_probabilities\":[0.832619845547938],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_augmix-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_augmix_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_augmix-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_augmix_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_augmix-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_augmix_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_ods-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_ods_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_ods-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_ods_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_ods-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_ods_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_target_mixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_target_mixup_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_target_mixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_target_mixup_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-input_target_mixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_input_target_mixup_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-target_smoothing-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_target_smoothing_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-target_smoothing-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_target_smoothing_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-target_smoothing-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_target_smoothing_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset cifar10 --architecture resnet --label cifar10-resnet-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${svhn_fc_weight_dropconnect_hp}

# CIFAR-100 with CIFAR-10 Hyperparameters
cifar10_resnet_vanilla_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
cifar10_resnet_gradient_gaussian_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_gradient_eta\":0.5488135039273248,\"noise_gradient_gamma\":0.7151893663724195,\"noise_probabilities\":[0.6027633760716439],\"noise_types\":[\"gradient_gaussian\"]}
cifar10_resnet_input_additive_gaussian_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_input_additive_gaussian_sigma\":0.021600820741402058,\"noise_probabilities\":[0.8700121482468192],\"noise_types\":[\"input_additive_gaussian\"]}
cifar10_resnet_input_augmix_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_input_augmix_alpha\":0.9567686659185185,\"noise_input_augmix_severity\":7,\"noise_input_augmix_width\":2,\"noise_input_augmix_chain_depth\":2,\"noise_probabilities\":[0.8464797171917673],\"noise_types\":[\"input_augmix\"]}
cifar10_resnet_input_ods_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_input_ods_temperature\":1.7532877050933273,\"noise_input_ods_eta\":0.0018662266976517971,\"noise_probabilities\":[0.6458941130666561],\"noise_types\":[\"input_ods\"]}
cifar10_resnet_input_random_crop_horizontal_flip_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_probabilities\":[0.663824328420002],\"noise_types\":[\"input_random_crop_horizontal_flip\"]}
cifar10_resnet_input_target_mixup_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_input_target_mixup_alpha\":0.9636627605010293,\"noise_probabilities\":[0.3834415188257777],\"noise_types\":[\"input_target_mixup\"]}
cifar10_resnet_model_sp_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_model_shrink_and_perturb_mu\":0.44474832178855184,\"noise_model_shrink_and_perturb_sigma\":8.151847206620481e-06,\"noise_model_shrink_and_perturb_epoch_frequency\":11,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
cifar10_resnet_target_smoothing_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_target_label_smoothing\":0.14088568633377876,\"noise_probabilities\":[0.5517086253684608],\"noise_types\":[\"target_label_smoothing\"]}
cifar10_resnet_activation_additive_gaussian_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_activation_additive_gaussian_sigma\":0.0013614412526817355,\"noise_probabilities\":[0.6783559080940775],\"noise_types\":[\"activation_additive_gaussian\"]}
cifar10_resnet_activation_dropout_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_activation_dropout_p\":0.3417496155051704,\"noise_probabilities\":[0.5802767305053959],\"noise_types\":[\"activation_dropout\"]}
cifar10_resnet_weight_additive_gaussian_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_weight_additive_gaussian_sigma\":0.004430375245218269,\"noise_probabilities\":[0.7151893663724195],\"noise_types\":[\"weight_additive_gaussian\"]}
cifar10_resnet_weight_dropconnect_hp={\"lr\":0.009793007161523374,\"l2\":0.0033326096576845403,\"noise_weight_dropconnect_p\":0.020768834766933364,\"noise_probabilities\":[0.31850378513812466],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_augmix-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_augmix-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_augmix-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_ods-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_ods_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_ods-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_ods_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_ods-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_ods_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_target_mixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_target_mixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-input_target_mixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-target_smoothing-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-target_smoothing-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-target_smoothing-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset cifar100 --architecture resnet --label cifar100-resnet-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar10_resnet_weight_dropconnect_hp}

# TinyImageNet with CIFAR-100 Hyperparameters
cifar100_resnet_vanilla_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_types\":[\"none\"],\"noise_probabilities\":[1.0]}
cifar100_resnet_gradient_gaussian_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_gradient_eta\":0.3362518022543597,\"noise_gradient_gamma\":0.5110858682871183,\"noise_probabilities\":[0.0054896759183097645],\"noise_types\":[\"gradient_gaussian\"]}
cifar100_resnet_input_additive_gaussian_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_input_additive_gaussian_sigma\":0.00028353120962798327,\"noise_probabilities\":[0.7636036817071128],\"noise_types\":[\"input_additive_gaussian\"]}
cifar100_resnet_input_augmix_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_input_augmix_alpha\":0.06570347941744326,\"noise_input_augmix_severity\":8,\"noise_input_augmix_width\":1,\"noise_input_augmix_chain_depth\":-1,\"noise_probabilities\":[0.9939192176398296],\"noise_types\":[\"input_augmix\"]}
cifar100_resnet_input_ods_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_input_ods_temperature\":0.7695990590697088,\"noise_input_ods_eta\":0.00041184534689693466,\"noise_probabilities\":[0.7716523644332861],\"noise_types\":[\"input_ods\"]}
cifar100_resnet_input_random_crop_horizontal_flip_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_probabilities\":[0.5488135039273248],\"noise_types\":[\"input_random_crop_horizontal_flip\"]}
cifar100_resnet_input_target_mixup_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_input_target_mixup_alpha\":0.5745260681224471,\"noise_probabilities\":[0.7520319988738609],\"noise_types\":[\"input_target_mixup\"]}
cifar100_resnet_model_sp_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_model_shrink_and_perturb_mu\":0.5488135039273248,\"noise_model_shrink_and_perturb_sigma\":7.257005721594268e-05,\"noise_model_shrink_and_perturb_epoch_frequency\":13,\"noise_types\":[\"model_shrink_and_perturb\"],\"noise_probabilities\":[1.0]}
cifar100_resnet_target_smoothing_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_target_label_smoothing\":0.030869365484302164,\"noise_probabilities\":[0.7671498488594175],\"noise_types\":[\"target_label_smoothing\"]}
cifar100_resnet_activation_additive_gaussian_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_activation_additive_gaussian_sigma\":0.00144569474647614,\"noise_probabilities\":[0.6483491584726234],\"noise_types\":[\"activation_additive_gaussian\"]}
cifar100_resnet_activation_dropout_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_activation_dropout_p\":0.023873432581810888,\"noise_probabilities\":[0.3454568105971005],\"noise_types\":[\"activation_dropout\"]}
cifar100_resnet_weight_additive_gaussian_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_weight_additive_gaussian_sigma\":0.0004525410182460662,\"noise_probabilities\":[0.0010458436627004096],\"noise_types\":[\"weight_additive_gaussian\"]}
cifar100_resnet_weight_dropconnect_hp={\"lr\":0.029523231194148087,\"l2\":0.0003643493156777225,\"noise_weight_dropconnect_p\":0.05175229972038031,\"noise_probabilities\":[0.04588518786160848],\"noise_types\":[\"weight_dropconnect\"]}

python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-vanilla-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_vanilla_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-vanilla-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_vanilla_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-vanilla-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_vanilla_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-gradient_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-gradient_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-gradient_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_gradient_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-target_smoothing-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-target_smoothing-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-target_smoothing-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_target_smoothing_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-model_sp-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_model_sp_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-model_sp-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_model_sp_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-model_sp-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_model_sp_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_augmix-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_augmix-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_augmix-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_augmix_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_target_mixup-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_target_mixup-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_target_mixup-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_target_mixup_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_random_crop_horizontal_flip-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_random_crop_horizontal_flip_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_dropout-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_dropout-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-activation_dropout-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_activation_dropout_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_additive_gaussian-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_additive_gaussian-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_additive_gaussian-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_additive_gaussian_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_dropconnect-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_dropconnect_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_dropconnect-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_dropconnect_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-weight_dropconnect-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_weight_dropconnect_hp}
python train.py --gpu 0 --seed 0 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_ods-dataset-transfer-retrain-v0 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_ods_hp}
python train.py --gpu 0 --seed 1 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_ods-dataset-transfer-retrain-v1 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_ods_hp}
python train.py --gpu 0 --seed 2 --dataset tinyimagenet --architecture resnet --label tinyimagenet-resnet-input_ods-dataset-transfer-retrain-v2 --data_root_dir ${model_path} --save ${model_path} --hyperparameters=${cifar100_resnet_input_ods_hp}
